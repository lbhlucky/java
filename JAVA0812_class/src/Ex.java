
public class Ex {

	public static void main(String[] args) {
		/*
		 * 클래스를 정의한 뒤 반드시 인스턴스를 생성하여야만
		 * 해당 클래스에 대한 실체화가 되고, 실체화된 인스턴스를 통해
		 * 변수에 데이터를 저장하거나 메서드를 호출하여 동작을 수행 가능
		 * 
		 * < 객체 사용 순서 >
		 * 1. 클래스 타입(참조형) 변수 선언
		 * 2. new 연산자를 사용하여 클래스의 인스턴스 생성
		 *    => 생성된 인스턴스의 주소를 참조 변수에 저장
		 * 3. 주소가 저장된 참조 변수를 통해 인스턴스에 접근하여 사용
		 * 
		 * < 클래스타입(참조형) 변수 선언 기본 문법 >
		 * 클래스명 변수명;
		 * 
		 * < 클래스 인스턴스 생성 및 주소 저장 기본 문법 > == 인스턴스화
		 * 변수명 = new 클래스명():
		 * 
		 * < 생성된 인스턴스 접근 방법 >
		 * 변수명.멤버변수명 또는 변수명.메서드명
		 */
		
		// 클래스 변수 p 선언
//		Person p;
		
		// 인스턴스 생성 및 주소 저장
//		p = new Person();
		
		// 위의 두 문장을 한 문장으로 결합
		Person p = new Person();
		
		// 기본형 변수 사용 예시
		int a;	// int형 변수 a 선언
		a = 10;	// 변수 a에 정수 10 저장
		System.out.println(a);	// 변수 a의 값을 저장
		
		System.out.println("----------------------------------");
		
		// 인스턴스가 생성되면 클래스 내의 멤버변수가 
		// 인스턴스 내의 메모리에 생성됨.(실제 데이터 저장 가능)
		// 이 때, 인스턴스 내의 멤버변수에 접근하려면
		// 클래스 변수인 참조 변수를 통해 인스턴스에 접근해야함
		p.name = "홍길동";	// 참조변수 p를 따라가서 멤버변수 name에 접근
		// => 해당 멤버변수에 문자열 "홍길동"을 저장
		
		//  멤버변수 age에 접근하여 정수 20을 저장
		p.age = 20;
		
		// Person 인스턴스의 멤버변수에 저장된 값을 출력
		System.out.println("이름 : " + p.name);
		System.out.println("나이 : " + p.age);
		
		p.print();
		
		System.out.println("---------------------------------");
		
		// 두번째 Person 인스턴스 생성(변수 p2 사용)
		// => 이름 : 이순신, 나이 : 40
		// => 홍길동이 저장된 Person 인스턴스(p)와
		//    클래스 타입은 같지만 서로 다른 인스턴스로 취급됨
		Person p2 = new Person();
		p2.name = "이순신";
		p2.age = 40;
		
		System.out.println("이름 : " + p2.name);
		System.out.println("나이 : " + p2.age);

		p.print();
		
	}

}	// Ex 클래스 끝




